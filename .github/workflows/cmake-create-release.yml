name: Create Release

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

env:
  SOURCE_DIR:   ${{ github.workspace }}
  QT_VERSION:   6.6.2
  ARTIFACT:     |
                complexcalc_win_x64.zip
                complexcalc_ubuntu_x64.zip
  BUILD_TYPE:   Release

jobs:      
  create_release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}

    steps:
      - name: (1) Create Release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: ${{ steps.version.outputs.version }}
          tag_name: ${{ github.ref }}
        env:
          GITHUB_TOKEN: ${{ github.token }}

  build_win_x64:
    needs: create_release
    runs-on:  windows-latest

    steps:
      - name: (1) Checkout repo
        uses: actions/checkout@v3
        with:
          submodules: recursive
          
      - name: (2) Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version:      ${{ env.QT_VERSION }}
          host:         windows
          target:       desktop
          arch:         win64_msvc2019_64
          dir:          ${{ runner.temp }}
          modules:      qt3d
          setup-python: false       
              
      - name: (3) Set up Visual Studio shell
        uses: egor-tensin/vs-shell@v2
        with:
          arch: x64
    
      - name: (4) Configure CMake
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      - name: (5) Build
        working-directory: ${{ env.SOURCE_DIR }}
        run:  |
              cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
              mkdir ${{ runner.temp }}\build
              cp ${{github.workspace}}\build\Release\ComplexCalc.exe ${{ runner.temp }}\build\ComplexCalc.exe
              cd ${{ runner.temp }}\build
              windeployqt6 --qmldir ${{ runner.temp }}\build ComplexCalc.exe --pdb --release --compiler-runtime
              rm -r tls
              rm -r networkinformation

      - name: (6) Zip
        uses: thedoctor0/zip-release@0.7.6
        with:
          type: zip
          filename: ComplexCalc-${{github.ref_name}}-win-x86_64.zip
          directory: ${{ runner.temp }}
          path: ${{ runner.temp }}\build\*

      #- name: (Debugging) Print Directory Structure
      #  working-directory: ${{ runner.temp }}
      #  run: dir

      #- name: (Debugging) Create File
      #  working-directory: ${{ github.workspace }}
      #  run: copy NUL complexcalc.zip

      - name: (7) Get release
        id: latest_release_info
        uses: jossef/action-latest-release-info@v1.2.1
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: (8) Upload Artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ${{ runner.temp }}\ComplexCalc-${{github.ref_name}}-win-x86_64.zip
          asset_name: ComplexCalc-${{github.ref_name}}-win-x86_64.zip
          asset_content_type: application/zip
          
  build_linux_x64:
    needs: create_release
    runs-on:  ubuntu-20.04

    steps:

    - name: (1) Checkout repo
      uses: actions/checkout@v3
      with:
        submodules: recursive
          
    - name: (2) Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        version:      ${{ env.QT_VERSION }}
        host:         linux
        target:       desktop
        arch:         gcc_64
        dir:          ${{ runner.temp }}
        modules:      qt3d qtshadertools
        setup-python: false

    - name: (3) Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: (4) Build
      working-directory: ${{ env.SOURCE_DIR }}
      run:  |
            cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: (5) Create AppImage
      working-directory: ${{ github.workspace }}/build
      run: |
            wget -O deploy.AppImage https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage
            chmod +x deploy.AppImage
            sudo apt-get install libxcb-cursor0
            cp ${{ github.workspace }}/resources/ComplexCalc.png ComplexCalc.png
            export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${{ github.workspace }}/Qt/${{env.QT_VERSION}}/gcc_64/lib/
            ./deploy.AppImage ${{ github.workspace }}/resources/ComplexCalc.desktop -appimage -no-translations -extra-plugins=renderers
            mv -- ComplexCalc*.AppImage ComplexCalc-${{github.ref_name}}-linux-x86-64.AppImage

    - name: (6) Upload Artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create_release.outputs.upload_url }}
        asset_path: ${{ github.workspace }}/build/ComplexCalc-${{github.ref_name}}-linux-x86-64.AppImage
        asset_name: ComplexCalc-${{github.ref_name}}-linux-x86_64.AppImage
        asset_content_type: application/vnd.appimage
